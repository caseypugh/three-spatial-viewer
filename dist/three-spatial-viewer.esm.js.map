{"version":3,"file":"three-spatial-viewer.esm.js","sources":["../src/components/uniforms.ts","../src/components/constants.ts","../src/components/player.ts"],"sourcesContent":["export const Uniforms = {\n  colorTexture: {\n    value: null\n  },\n  quiltRows: {\n    value: 0,\n  },\n  quiltColumns: {\n    value: 0,\n  },\n  quiltViewWidth: {\n    value: 0,\n  },\n  quiltViewHeight: {\n    value: 0,\n  },\n  quiltAngle: {\n    value: 0,\n  },\n  quiltStereoEyeDistance: {\n    value: 0,\n  },\n}\n","enum SpatialType {\n  // MONO = 0,\n  // STEREO = 1,\n  LOOKING_GLASS\n}\n\nenum StereoMode {\n  OFF,\n  COLOR ,\n  RED_CYAN,\n  DIFFERENCE,\n  LEFT_RIGHT,\n}\n\nclass QuiltConfig {\n  public angle: number = 0\n  public stereoEyeDistance: number = 8\n  public rows: number = 8\n  public columns: number = 8\n  public width: number = 480\n  public height: number = 640\n}\n\nclass Props {\n  public spatialType: SpatialType = SpatialType.LOOKING_GLASS\n  public quilt: QuiltConfig = null\n  public stereoMode: StereoMode = StereoMode.COLOR\n}\n\nexport { QuiltConfig, SpatialType, StereoMode, Props }","import {\n  Object3D,\n  ShaderMaterial,\n  Mesh,\n  PlaneBufferGeometry,\n  Texture,\n  RGBFormat,\n  FrontSide,\n  RepeatWrapping\n} from './three'\n\n// @ts-ignore\nimport frag from '../shaders/spatial.frag'\n// @ts-ignore\nimport vert from '../shaders/spatial.vert'\n\nimport { Uniforms } from './uniforms'\nimport { Props, QuiltConfig, SpatialType, StereoMode } from './constants'\n\nexport default class Player extends Object3D {\n\n  private props: Props = new Props()\n\n  private static geometry: PlaneBufferGeometry\n\n  private material: ShaderMaterial = new ShaderMaterial({\n    uniforms: Uniforms,\n    vertexShader: vert,\n    fragmentShader: frag,\n    transparent: true,\n    side: FrontSide,\n  })\n\n  constructor(texture: Texture, depth?: Texture, props?: Props) {\n    super()\n\n    /** Assign the user provided props, if any */\n    this.setProps(this.props, props)\n\n    /** Add the compiler definitions needed to pick the right GLSL methods */\n    this.setShaderDefines(this.shaderDefines)\n\n    /**\n     * Create the geometry only once, it can be shared between instances\n     *  of the viewer since it's kept as a static class member\n     **/\n    if (!Player.geometry) {\n      Player.geometry = new PlaneBufferGeometry(1, 1)\n      // Player.geometry.scale(this.aspectRatio, 1, 1);\n      this.scale.x = this.aspectRatio\n    }\n\n    /** Assign the textures and update the shader uniforms */\n    this.assignTexture(texture)\n    this.updateUniforms()\n\n    /** Create the Mesh/Points and add it to the viewer object */\n    super.add(this.createMesh(Player.geometry, this.material))\n  }\n\n  private createMesh(geo: PlaneBufferGeometry, mat: ShaderMaterial): Mesh {\n    return new Mesh(geo, mat);\n  }\n\n  /** Internal util to assign the textures to the shader uniforms */\n  private assignTexture(tex: Texture): void {\n    this.texture = this.setDefaultTextureProps(tex)\n  }\n\n  private clearDefines(defines: Array<string>): void {\n    defines.forEach(define => {\n      delete this.material.defines[define]\n    })\n    this.material.needsUpdate = true\n  }\n\n  private setShaderDefines(defines: Array<string>): void {\n    defines.forEach(define => {\n      if (define) {\n        this.material.defines[define] = ''\n      }\n    })\n    this.material.needsUpdate = true\n  }\n\n  /** Internal util to set viewer props from config object */\n  private setProps(viewerProps: Props, userProps?: object): void {\n    if (!userProps) return\n\n    /** Iterate over user provided props and assign to viewer props */\n    for (let prop in userProps) {\n      if (prop in viewerProps) {\n        viewerProps[prop] = userProps[prop]\n      } else {\n        console.warn(\n          `SpatialViewer: Provided ${prop} in config but it is not a valid property and wiill be ignored`,\n        )\n      }\n    }\n  }\n\n  private setDefaultTextureProps(texture: Texture): Texture {\n    texture.format = RGBFormat\n    texture.generateMipmaps = true\n    texture.wrapS = RepeatWrapping\n    texture.wrapT = RepeatWrapping\n    return texture\n  }\n\n  private updateUniforms() {\n    this.material.uniforms.quiltStereoEyeDistance.value = this.props.quilt.stereoEyeDistance\n    this.material.uniforms.quiltAngle.value = this.props.quilt.angle\n    this.material.uniforms.quiltColumns.value = this.props.quilt.columns\n    this.material.uniforms.quiltRows.value = this.props.quilt.rows\n  }\n\n  public dispose(): void {\n    if (this.material) { \n      Player.geometry.dispose()\n      this.material.dispose()\n      this.texture.dispose()\n    }\n  }\n\n  public get shaderDefines(): Array<string> {\n    return [SpatialType[this.props.spatialType], \n            \"STEREO_\" + StereoMode[this.props.stereoMode],\n            this.props.stereoMode == StereoMode.OFF ? null : \"STEREO_ON\" ]\n  }\n\n  public get spatial(): SpatialType {\n    return this.props.spatialType\n  }\n\n  public set spatial(val: SpatialType) {\n    this.clearDefines(this.shaderDefines)\n    this.props.spatialType = val\n    this.setShaderDefines(this.shaderDefines)\n  }\n\n  public get stereoMode(): StereoMode {\n    return this.props.stereoMode\n  }\n\n  public set stereoMode(val: StereoMode) {\n    this.clearDefines(this.shaderDefines)\n    this.props.stereoMode = val\n    this.setShaderDefines(this.shaderDefines)\n    this.scale.set(this.aspectRatio, 1, 1)\n  }\n\n  public get aspectRatio(): number {\n    if (this.props.stereoMode == StereoMode.LEFT_RIGHT) {\n      return (this.props.quilt.width * 2.0) / this.props.quilt.height\n    }\n    \n    return this.props.quilt.width / this.props.quilt.height\n  }\n\n  public get quiltAngle(): number {\n    return this.props.quilt.angle\n  }\n\n  public set quiltAngle(val: number) {\n    this.props.quilt.angle = val\n    this.updateUniforms()\n  }\n\n  public get quiltStereoEyeDistance(): number {\n    return this.props.quilt.stereoEyeDistance\n  }\n\n  public set quiltStereoEyeDistance(val: number) {\n    this.props.quilt.stereoEyeDistance = val\n    this.updateUniforms()\n  }\n\n  public get quiltWidth(): number {\n    return this.props.quilt.width\n  }\n\n  public set quiltWidth(val: number) {\n    this.props.quilt.width = val\n    this.updateUniforms()\n  }\n\n  public set quiltHeight(val: number) {\n    this.props.quilt.height = val\n    this.updateUniforms()\n  }\n\n  public get quiltHeight(): number {\n    return this.props.quilt.height\n  }\n\n  public set quiltRows(val: number) {\n    this.props.quilt.rows = val\n    this.updateUniforms()\n  }\n\n  public get quiltRows(): number {\n    return this.props.quilt.rows\n  }\n\n  public set quiltColumns(val: number) {\n    this.props.quilt.columns = val\n    this.updateUniforms()\n  }\n\n  public get quiltColumns(): number {\n    return this.props.quilt.columns\n  }\n\n  public set texture(map: Texture) {\n    this.material.uniforms.colorTexture.value = map\n  }\n\n  public get texture(): Texture {\n    return this.material.uniforms.colorTexture.value\n  }\n\n}\n"],"names":["Uniforms","colorTexture","value","quiltRows","quiltColumns","quiltViewWidth","quiltViewHeight","quiltAngle","quiltStereoEyeDistance","SpatialType","StereoMode","QuiltConfig","angle","stereoEyeDistance","rows","columns","width","height","Props","spatialType","LOOKING_GLASS","quilt","stereoMode","COLOR","Player","Object3D","constructor","texture","depth","props","material","ShaderMaterial","uniforms","vertexShader","vert","fragmentShader","frag","transparent","side","FrontSide","setProps","setShaderDefines","shaderDefines","geometry","PlaneBufferGeometry","scale","x","aspectRatio","assignTexture","updateUniforms","add","createMesh","geo","mat","Mesh","tex","setDefaultTextureProps","clearDefines","defines","forEach","define","needsUpdate","viewerProps","userProps","prop","console","warn","format","RGBFormat","generateMipmaps","wrapS","RepeatWrapping","wrapT","dispose","OFF","spatial","val","set","LEFT_RIGHT","quiltWidth","quiltHeight","map"],"mappings":"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"}