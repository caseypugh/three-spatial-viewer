{"version":3,"file":"three-spatial-viewer.esm.js","sources":["../src/components/uniforms.ts","../src/components/constants.ts","../src/components/player.ts"],"sourcesContent":["export const Uniforms = {\n  colorTexture: {\n    value: null\n  },\n  quiltRows: {\n    value: 0,\n  },\n  quiltColumns: {\n    value: 0,\n  },\n  quiltViewWidth: {\n    value: 0,\n  },\n  quiltViewHeight: {\n    value: 0,\n  },\n  quiltAngle: {\n    value: 0,\n  },\n  quiltStereoEyeDistance: {\n    value: 0,\n  },\n}\n","enum SpatialType {\n  MONO = 0,\n  STEREO = 1,\n  LOOKING_GLASS = 2\n}\n\nenum StereoMode {\n  COLOR = 0,\n  RED_CYAN = 1,\n  DIFFERENCE = 2,\n  LEFT_RIGHT = 3,\n  OFF,\n}\n\nclass QuiltConfig {\n  public angle: number = 0\n  public stereoEyeDistance: number = 8\n  public rows: number = 8\n  public columns: number = 8\n  public width: number = 480\n  public height: number = 640\n}\n\nclass Props {\n  public spatialType: SpatialType = SpatialType.MONO\n  public quilt: QuiltConfig = null\n  public stereoMode: StereoMode = StereoMode.COLOR\n}\n\nexport { QuiltConfig, SpatialType, StereoMode, Props }","import {\n  Object3D,\n  ShaderMaterial,\n  BackSide,\n  Mesh,\n  Points,\n  PlaneBufferGeometry,\n  Texture,\n  NearestFilter,\n  LinearFilter,\n  RGBFormat,\n  RepeatWrapping\n} from './three'\n\n// @ts-ignore\nimport frag from '../shaders/spatial.frag'\n// @ts-ignore\nimport vert from '../shaders/spatial.vert'\n\nimport { Uniforms } from './uniforms'\nimport { Props, QuiltConfig, SpatialType, StereoMode } from './constants'\nimport { DoubleSide, FrontSide } from 'three'\n\nexport default class Player extends Object3D {\n\n  private props: Props = new Props()\n\n  private static geometry: PlaneBufferGeometry\n\n  private material: ShaderMaterial = new ShaderMaterial({\n    uniforms: Uniforms,\n    vertexShader: vert,\n    fragmentShader: frag,\n    transparent: true,\n    side: FrontSide,\n  })\n\n  constructor(texture: Texture, depth?: Texture, props?: object) {\n    super()\n\n    /** Assign the user provided props, if any */\n    this.setProps(this.props, props)\n\n    /** Add the compiler definitions needed to pick the right GLSL methods */\n    this.setShaderDefines(this.shaderDefines)\n\n    /**\n     * Create the geometry only once, it can be shared between instances\n     *  of the viewer since it's kept as a static class member\n     **/\n    if (!Player.geometry) {\n      Player.geometry = new PlaneBufferGeometry(2 * this.aspectRatio, 2)\n    }\n\n    /** Assign the textures and update the shader uniforms */\n    this.assignTexture(texture)\n    this.updateUniforms()\n\n    /** Set the displacement using the public setter */\n    //   this.displacement = this.props.displacement\n\n    /** Create the Mesh/Points and add it to the viewer object */\n    super.add(this.createMesh(Player.geometry, this.material))\n  }\n\n  private createMesh(geo: PlaneBufferGeometry, mat: ShaderMaterial) {\n    return new Mesh(geo, mat);\n  }\n\n  /** Internal util to assign the textures to the shader uniforms */\n  private assignTexture(tex: Texture): void {\n    this.texture = this.setDefaultTextureProps(tex)\n  }\n\n  private clearDefines(defines: Array<string>): void {\n    defines.forEach(define => {\n      delete this.material.defines[define]\n    })\n    this.material.needsUpdate = true\n  }\n\n  private setShaderDefines(defines: Array<string>): void {\n    defines.forEach(define => {\n      if (define) {\n        this.material.defines[define] = ''\n      }\n    })\n    this.material.needsUpdate = true\n  }\n\n  /** Internal util to set viewer props from config object */\n  private setProps(viewerProps: Props, userProps?: object): void {\n    if (!userProps) return\n\n    /** Iterate over user provided props and assign to viewer props */\n    for (let prop in userProps) {\n      if (prop in viewerProps) {\n        viewerProps[prop] = userProps[prop]\n      } else {\n        console.warn(\n          `SpatialViewer: Provided ${prop} in config but it is not a valid property and wiill be ignored`,\n        )\n      }\n    }\n  }\n\n  private setDefaultTextureProps(texture: Texture): Texture {\n    texture.minFilter = NearestFilter\n    texture.magFilter = LinearFilter\n    texture.format = RGBFormat\n    texture.generateMipmaps = false\n    texture.wrapS = RepeatWrapping\n    texture.wrapT = RepeatWrapping\n    return texture\n  }\n\n  private updateUniforms() {\n    this.material.uniforms.quiltStereoEyeDistance.value = this.props.quilt.stereoEyeDistance\n    this.material.uniforms.quiltAngle.value = this.props.quilt.angle\n    this.material.uniforms.quiltColumns.value = this.props.quilt.columns\n    this.material.uniforms.quiltRows.value = this.props.quilt.rows\n  }\n\n  public get shaderDefines(): Array<string> {\n    return [SpatialType[this.props.spatialType], \n            \"STEREO_\" + StereoMode[this.props.stereoMode],\n            this.props.stereoMode == StereoMode.OFF ? null : \"STEREO_ON\" ]\n  }\n\n  public get spatial(): SpatialType {\n    return this.props.spatialType\n  }\n\n  public set spatial(val: SpatialType) {\n    this.clearDefines(this.shaderDefines)\n    this.props.spatialType = val\n    this.setShaderDefines(this.shaderDefines)\n  }\n\n  public get stereoMode(): StereoMode {\n    return this.props.stereoMode\n  }\n\n  public set stereoMode(val: StereoMode) {\n    this.clearDefines(this.shaderDefines)\n    this.props.stereoMode = val\n    this.setShaderDefines(this.shaderDefines)\n  }\n\n  public get aspectRatio(): number {\n    if (this.props.stereoMode == StereoMode.LEFT_RIGHT) {\n      return (this.props.quilt.width * 2.0) / this.props.quilt.height\n    }\n    \n    return this.props.quilt.width / this.props.quilt.height\n  }\n\n  public get quiltAngle(): number {\n    return this.props.quilt.angle\n  }\n\n  public set quiltAngle(val: number) {\n    this.props.quilt.angle = val\n    this.updateUniforms()\n  }\n\n  public get quiltStereoEyeDistance(): number {\n    return this.props.quilt.stereoEyeDistance\n  }\n\n  public set quiltStereoEyeDistance(val: number) {\n    this.props.quilt.stereoEyeDistance = val\n    this.updateUniforms()\n  }\n\n  public get quiltWidth(): number {\n    return this.props.quilt.width\n  }\n\n  public set quiltWidth(val: number) {\n    this.props.quilt.width = val\n    this.updateUniforms()\n  }\n\n  public set quiltHeight(val: number) {\n    this.material.uniforms.quiltViewHeight.value = val\n  }\n\n  public get quiltHeight(): number {\n    return this.material.uniforms.quiltViewHeight.value\n  }\n\n  public set quiltRows(val: Number) {\n    this.material.uniforms.quiltRows.value = val\n  }\n\n  public get quiltRows(): Number {\n    return this.material.uniforms.quiltRows.value\n  }\n\n  public set quiltColumns(val: Number) {\n    this.material.uniforms.quiltColumns.value = val\n  }\n\n  public get quiltColumns(): Number {\n    return this.material.uniforms.quiltColumns.value\n  }\n\n  public get texture(): Texture {\n    return this.material.uniforms.colorTexture.value\n  }\n\n  public set texture(map: Texture) {\n    this.material.uniforms.colorTexture.value = map\n  }\n}\n"],"names":["Uniforms","colorTexture","value","quiltRows","quiltColumns","quiltViewWidth","quiltViewHeight","quiltAngle","quiltStereoEyeDistance","SpatialType","StereoMode","QuiltConfig","angle","stereoEyeDistance","rows","columns","width","height","Props","spatialType","MONO","quilt","stereoMode","COLOR","Player","Object3D","constructor","texture","depth","props","material","ShaderMaterial","uniforms","vertexShader","vert","fragmentShader","frag","transparent","side","FrontSide","setProps","setShaderDefines","shaderDefines","geometry","PlaneBufferGeometry","aspectRatio","assignTexture","updateUniforms","add","createMesh","geo","mat","Mesh","tex","setDefaultTextureProps","clearDefines","defines","forEach","define","needsUpdate","viewerProps","userProps","prop","console","warn","minFilter","NearestFilter","magFilter","LinearFilter","format","RGBFormat","generateMipmaps","wrapS","RepeatWrapping","wrapT","OFF","spatial","val","LEFT_RIGHT","quiltWidth","quiltHeight","map"],"mappings":"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"}